plugins {
    id "java"
    id "jigsaw"
    id "com.github.johnrengelman.shadow"
}

loom {
    splitEnvironmentSourceSets()
    mods {
        "horizon" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
    accessWidenerPath = file("src/main/resources/horizon.manipulator")
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
//    implementation(fileTree("./lib"))
    bundle("com.github.stephengold:Libbulletjme:21.2.1")
    bundle("commons-io:commons-io:2.16.1")
    bundle("com.github.mgsx-dev.gdx-gltf:gltf:2.2.1") {
        exclude group: "com.badlogicgames.gdx", module: "gdx"
    }
    cosmicReach("finalforeach:cosmicreach:$cosmic_reach_version:client")
//    implementation(files("./lib/PuzzleLoader-69.69.69-bundle.jar"))
}

processResources {
    // Locations of where to inject the properties
    def resourceTargets = [ "puzzle.mod.json" ]

    // Left item is the name in the target, right is the varuable name
    def replaceProperties = [
            "mod_version"     : version,
            "mod_desc"       : desc,
            "mod_name"        : project.name,
            "mod_id"          : id,
    ]


    inputs.properties replaceProperties
    replaceProperties.put "project", project
    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}
